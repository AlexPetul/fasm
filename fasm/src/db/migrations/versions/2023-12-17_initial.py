"""initial

Revision ID: 5694e59f7e4f
Revises: 
Create Date: 2023-12-17 10:57:57.835113

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '5694e59f7e4f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('slug', sa.String(length=200), nullable=True),
    sa.Column('gpt_hint', sa.String(), nullable=True),
    sa.Column('rule', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('sections_pkey')),
    sa.UniqueConstraint('name', name=op.f('sections_name_key')),
    sa.UniqueConstraint('slug', name=op.f('sections_slug_key'))
    )
    with op.batch_alter_table('sections', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('sections_id_idx'), ['id'], unique=False)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cognito_id', sa.String(length=36), nullable=True),
    sa.Column('email', sa.String(length=200), nullable=True),
    sa.Column('username', sa.String(length=200), nullable=True),
    sa.Column('role', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('users_pkey'))
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('users_cognito_id_idx'), ['cognito_id'], unique=False)
        batch_op.create_index(batch_op.f('users_email_idx'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('users_id_idx'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('users_username_idx'), ['username'], unique=True)

    op.create_table('verbs',
    sa.Column('eng', sa.String(length=100), nullable=False),
    sa.Column('farsi', sa.String(length=100), nullable=True),
    sa.Column('stem', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('eng', name=op.f('verbs_pkey')),
    sa.UniqueConstraint('eng', name=op.f('verbs_eng_key'))
    )
    op.create_table('vocabulary',
    sa.Column('eng', sa.String(length=100), nullable=False),
    sa.Column('farsi', sa.String(length=100), nullable=True),
    sa.Column('preposition', sa.Boolean(), server_default=sa.text('false'), nullable=True),
    sa.PrimaryKeyConstraint('eng', name=op.f('vocabulary_pkey')),
    sa.UniqueConstraint('eng', name=op.f('vocabulary_eng_key'))
    )
    op.create_table('questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('user_answer', sa.Text(), nullable=True),
    sa.Column('gpt_answer', sa.Text(), nullable=True),
    sa.Column('reviewer_answer', sa.Text(), nullable=True),
    sa.Column('for_review', sa.Boolean(), nullable=True),
    sa.Column('reviewed', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('section_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['section_id'], ['sections.id'], name=op.f('questions_section_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('questions_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('questions_pkey'))
    )
    with op.batch_alter_table('questions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('questions_id_idx'), ['id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('questions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('questions_id_idx'))

    op.drop_table('questions')
    op.drop_table('vocabulary')
    op.drop_table('verbs')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('users_username_idx'))
        batch_op.drop_index(batch_op.f('users_id_idx'))
        batch_op.drop_index(batch_op.f('users_email_idx'))
        batch_op.drop_index(batch_op.f('users_cognito_id_idx'))

    op.drop_table('users')
    with op.batch_alter_table('sections', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('sections_id_idx'))

    op.drop_table('sections')
    # ### end Alembic commands ###
